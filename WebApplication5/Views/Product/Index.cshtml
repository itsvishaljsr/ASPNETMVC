@model WebApplication5.Models.Product

@{
    ViewBag.Title = "Product Management";
}

<h2>Manage Products</h2>

@using (Html.BeginForm("Insert", "Product", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(model => model.ProductID)
        @Html.TextBoxFor(model => model.ProductID, new { @class = "form-control", required = "required" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName)
        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", required = "required" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price)
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", required = "required" })
    </div>

    <button type="submit" class="btn btn-primary">Save Product</button>
}

<h3>Existing Products</h3>
<table id="productTable" class="table table-striped">
    <thead>
        <tr><th>ID</th><th>Name</th><th>Price</th></tr>
    </thead>
    <tbody>
        <!-- AJAX will populate this -->
    </tbody>
</table>

<script>
    $(document).ready(function(){
        // Initialize DataTable for displaying products
        var table = $('#productTable').DataTable();

        // Fetch all products dynamically and populate the table
        $.ajax({
            url: '@Url.Action("GetAllProducts", "Product")',  // AJAX call to fetch all products
            success: function(data) {
                table.clear();  // Clear existing table data

                // Populate table with products fetched from the database
                $.each(data, function(index, product) {
                    table.row.add([
                        product.ProductID,
                        product.ProductName,
                        product.Price
                    ]).draw();
                });
            }
        });
    });
</script>
